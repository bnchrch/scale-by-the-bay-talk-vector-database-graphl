schema {
  query: WeaviateObj
}

"""String or String[]"""
scalar TextStringGetObjectsActivites

"""Float or Float[]"""
scalar FloatGetObjectsActivites

"""Int or Int[]"""
scalar IntGetObjectsActivites

type ActivitesAdditional {
  certainty: Float
  creationTimeUnix: String
  distance: Float
  explainScore: String

  """The UUID of a Object, assigned by its local Weaviate"""
  id: String
  lastUpdateTimeUnix: String
  score: String
  vector: [Float]
}

"""Location of the root query"""
type WeaviateObj {
  """Get Objects on a local Weaviate"""
  Get: GetObjectsObj
}

"""String or String[]"""
scalar TextDateGetObjectsActivites

type Activites {
  """Record ID, used for bookkeeping."""
  _ab_record_id: String
  _ab_stream: String
  _additional: ActivitesAdditional
  achievement_count: Float
  athlete: String
  athlete_count: Float
  average_cadence: Float
  average_heartrate: Float
  average_speed: Float
  average_temp: Float
  average_watts: Float
  comment_count: Float
  commute: Boolean
  device_watts: Boolean
  display_hide_heartrate_option: Boolean
  distance: Float
  elapsed_time: Float
  elev_high: Float
  elev_low: Float
  end_latlng: String
  external_id: String
  flagged: Boolean
  from_accepted_tag: Boolean
  gear_id: String
  has_heartrate: Boolean
  has_kudoed: Boolean
  heartrate_opt_out: Boolean
  kilojoules: Float
  kudos_count: Float
  manual: Boolean
  map: String
  max_heartrate: Float
  max_speed: Float
  max_watts: Float
  moving_time: Float
  name: String
  photo_count: Float
  pr_count: Float
  private: Boolean
  raw_id: Float
  resource_state: Float
  sport_type: String
  start_date: String
  start_date_local: String
  start_latlng: String
  suffer_score: Float
  text: String
  timezone: String
  total_elevation_gain: Float
  total_photo_count: Float
  trainer: Boolean
  type: String
  upload_id: Float
  upload_id_str: String
  utc_offset: Float
  visibility: String
  weighted_average_watts: Float
  workout_type: String
}

"""
An object containing the Operands that can be applied to a 'where' filter
"""
input GetObjectsActivitesWhereOperandsInpObj {
  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsActivites

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsActivites

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsActivites

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsActivites

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsActivites

  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsActivitesWhereOperandsInpObj]

  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsActivitesWhereOperatorEnum

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsActivites
}

"""Boolean or Boolean[]"""
scalar BooleanGetObjectsActivites

"""String or String[]"""
scalar TextGetObjectsActivites

"""
An object containing the Operators that can be applied to a 'where' filter
"""
enum GetObjectsActivitesWhereOperatorEnum {
  """"""
  And

  """"""
  Like

  """"""
  LessThan

  """"""
  Equal

  """"""
  Not

  """"""
  NotEqual

  """"""
  Or

  """"""
  GreaterThanEqual

  """"""
  IsNull

  """"""
  ContainsAny

  """"""
  ContainsAll

  """"""
  GreaterThan

  """"""
  LessThanEqual

  """"""
  WithinGeoRange
}

"""
An object containing filter options for a local Get query, used to convert the result to the specified filters
"""
input GetObjectsActivitesWhereInpObj {
  """Contains the Operators that can be applied to a 'where' filter"""
  operator: GetObjectsActivitesWhereOperatorEnum

  """Specify a String value that the target property will be compared to"""
  valueString: TextStringGetObjectsActivites

  """
  Specify the path from the Objects fields to the property name (e.g. ['Things', 'City', 'population'] leads to the 'population' property of a 'City' object)
  """
  path: [String]

  """Specify an Integer value that the target property will be compared to"""
  valueInt: IntGetObjectsActivites

  """Specify a Float value that the target property will be compared to"""
  valueNumber: FloatGetObjectsActivites

  """Specify a Boolean value that the target property will be compared to"""
  valueBoolean: BooleanGetObjectsActivites

  """Specify a Text value that the target property will be compared to"""
  valueText: TextGetObjectsActivites

  """Specify a String value that the target property will be compared to"""
  valueDate: TextDateGetObjectsActivites

  """Contains the Operands that can be applied to a 'where' filter"""
  operands: [GetObjectsActivitesWhereOperandsInpObj]
}

"""An object used to get %ss on a local Weaviate"""
type GetObjectsObj {
  Activites(
    """Limit the results set (usually fewer results mean faster queries)"""
    limit: Int

    """Show the results after the first x results (pagination option)"""
    offset: Int

    """
    Cut off number of results after the Nth extrema. Off by default, negative numbers mean off.
    """
    autocut: Int

    """
    Filter options for a local Get query, used to convert the result to the specified filters
    """
    where: GetObjectsActivitesWhereInpObj

    """Show the results after a given ID"""
    after: String
  ): [Activites]
}